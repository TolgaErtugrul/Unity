using System.Collections;
using System.Collections.Generic;
using UnityEditor.SceneManagement;
using UnityEngine;
using UnityEngine.UI;

public class SettingsManager : MonoBehaviour
{
    [Header(" Elements ")]
    [SerializeField] private SoundsManager soundsManager;
    [SerializeField] private VibrationManager vibrationManager;
    [SerializeField] private Image soundsButtonImage;
    [SerializeField] private Image vibrationButtonImage;
    [SerializeField] private Sprite optionsOnSprite;
    [SerializeField] private Sprite optionsOffSprite;

    [Header(" Settings ")]
    private bool soundsState = true;
    private bool vibrationsState = true;

    private void Awake()
    {
        soundsState = PlayerPrefs.GetInt("sounds", 1) == 1;
        vibrationsState = PlayerPrefs.GetInt("vibrations", 1) == 1;

    }
    // Start is called before the first frame update
    void Start()
    {
        Setup();
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    private void Setup()
    {
        if (soundsState)
            EnableSounds();
        else
            DisableSounds();

        if (vibrationsState)
            EnableVibrations();
        else
            DisableVibrations();

    }

    public void ChangeSoundState()
    {
        if (soundsState)
            DisableSounds();
        else
            EnableSounds();

        soundsState = !soundsState;
        //save the value of the sounds state

        PlayerPrefs.SetInt("sounds", soundsState ? 1 : 0);
    }

    private void DisableSounds()
    {
        //Tell the sounds manager to set the volume of all the sounds to zero
        soundsManager.DisableSounds();

        //change the image of the sounds button
        soundsButtonImage.sprite = optionsOffSprite;
    }

    private void EnableSounds()
    {
        soundsManager.EnableSounds();

        //change the image of the sounds button
        soundsButtonImage.sprite = optionsOnSprite;
    }

    public void ChangeVibrationsState()
    {
        if (vibrationsState)
            DisableVibrations();
        else
            EnableVibrations();

        vibrationsState = !vibrationsState;

        PlayerPrefs.SetInt("vibrations", vibrationsState ? 1 : 0);

    }
    private void DisableVibrations()
    {
        vibrationManager.DisableVibrations();

        //change the image of the vibrations button
        vibrationButtonImage.sprite = optionsOffSprite;
    }

    private void EnableVibrations()
    {
        vibrationManager.EnableVibrations();

        //change the image of the vibrations button
        vibrationButtonImage.sprite = optionsOnSprite;
    }
}
